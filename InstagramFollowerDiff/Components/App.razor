@using InstagramFollowerDiff.Components.Layout
@inject ILocalStorageService _localStorage

<!DOCTYPE html>
<!--<html lang="en" data-bs-theme="@Theme"> -->
<html lang="en" data-bs-theme="dark">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="lib/bootstrap/css/bootstrap.css" />
    <link rel="script" href="lib/bootstrap/js/bootstrap.js" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="InstagramFollowerDiff.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link href="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Sharp|Material+Icons+Round|Material+Icons+Two+Tone" rel="stylesheet">
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9294268719208041" crossorigin="anonymous"></script>
    <script src="lib/platform.js"></script>
    <HeadOutlet />
</head>

<body>
    <Routes @rendermode=RenderMode.InteractiveServer />
    <script src="_framework/blazor.web.js"></script>
</body>

</html>

@code {
    public static string? Theme;
    public const string ThemeLight = "light";
    public const string ThemeDark = "dark";

    /*
    protected override async void OnInitialized()
    {
        Theme = await _localStorage.GetItemAsStringAsync("theme");
        if (Theme == null)
            ChangeTheme(ThemeLight);
        else
            StateHasChanged();
    }
    */

    public void ChangeTheme(string theme)
    {
        App.Theme = theme;
        StateHasChanged();
    }
}